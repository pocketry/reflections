When would you want to use a remote repository rather than keeping all your work
local?

    when working with other people

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    you may be working on a new feature and you don't want other changes in 
	the same area to override yours. You may want to make several commits before
	getting the most up to day information from a remote. the remote may be 
	another person and they aren't done with their feature yet.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    fork is a copy of a repository for your own use, it allows customization
	while the original remains the same. a clone is a copy of a repository,
	which can eventually be a remote and changes can be synced. a branch is
	a copy within a repository that you can use for feature development.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    able to work offline and know what other people are contributing to the code

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    harder to share code and merge changes as we work concurrently. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    when the end result of a feature requires more than one commit, a branch is
	the better option. if something is a straightforward change that one commit
	can fix, then working in master should be ok
